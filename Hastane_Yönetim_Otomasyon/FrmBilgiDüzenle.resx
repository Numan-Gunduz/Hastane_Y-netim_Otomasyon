<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MBgMBoO5af8He4V2d0UCwBMAAAAASUVORK5CYII=
</value>
  </data>
</root>